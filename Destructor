// destructor

#include <iostream.h>
#include <conio.h>
class Base
{
public:
    Base() // Constructor function.
    {
        cout << "\n Constructor Base class";
    }
    ~Base() // Destructor function
    {
        cout << "\n Destructor Base class";
    }
};

class Derived : public Base
{
public:
    Derived() // Constructor function
    {
        cout << "\n Constructor Derived class";
    }
    ~Derived() // Destructor function
    {
        cout << "\n Destructor Derived class"; // Destructor function is not called to //release its space.
    }
};
void main()
{
    clrscr();
    Base *bptr = new Derived; // Create a base class pointer object
    delete bptr;
    // Here pointer object is called to delete the //space occupied by the destructor.
    getch();
}
